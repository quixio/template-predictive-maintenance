/**
 * Telemetry Query API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Ordering } from './ordering';
import { Paging } from './paging';

/**
 * Describes filters for event group request
 */
export interface GetAllEventGroupsRequest { 
    /**
     * Filter event groups to include only those with matching stream ids. Optional, leave null to not filter by.
     */
    streamIds?: Array<string>;
    /**
     * Filter event groups to include only those with matching location. Optional, leave null to not filter by.
     */
    location?: string;
    /**
     * If true, Quix.TelemetryQuery.Contract.Requests.EventGroup.GetAllEventGroupsRequest.Location filter will return all descendants. If false, only direct children will be returned.  Default value is true.
     */
    locationDeepSearch?: boolean;
    /**
     * Filter event groups to include only those with matching custom property. This is a case sensitive 'Equals' match if any capital letter is specified, else case insensitive. Optional, leave null to not filter by.
     */
    customProperties?: string;
    /**
     * Filter event groups to include only those with matching description. This is a case sensitive 'Contains' match if any capital letter is specified, else case insensitive. Optional, leave null to not filter by.
     */
    description?: string;
    /**
     * Filter event groups to include only those with matching name. This is a case sensitive 'Contains' match if any capital letter is specified, else case insensitive. Optional, leave null to not filter by.
     */
    name?: string;
    /**
     * Filter event groups to include only those with matching group path. This is a case sensitive 'Equals' match. Optional, leave null to not filter by.
     */
    groupPaths?: Array<string>;
    /**
     * The ordering to apply to the resource. Optional, if left null, no ordering is applied
     */
    ordering?: Array<Ordering>;
    paging?: Paging;
}