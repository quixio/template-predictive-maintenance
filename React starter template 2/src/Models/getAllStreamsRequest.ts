/**
 * Telemetry Query API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { MetadataFilter } from './metadataFilter';
import { Ordering } from './ordering';
import { Paging } from './paging';
import { StreamStatus } from './streamStatus';

/**
 * Describes filters for stream request
 */
export interface GetAllStreamsRequest { 
    /**
     * Filter the streams to include only those with matching stream ids. This is a case sensitive 'Equals' match. Optional, leave null to not filter by.
     */
    streamIds?: Array<string>;
    /**
     * Filter the streams to include only those with matching location. This is a case sensitive 'StartsWith' match. Optional, leave null to not filter by.
     */
    location?: string;
    /**
     * Filter the streams to include only those with matching location. Optional, leave null to not filter by.
     */
    metadata?: Array<MetadataFilter>;
    /**
     * Filter the streams to include only those containing the specified parameter ids. This is a case sensitive 'ContainsAny' match. Optional, leave null to not filter by.
     */
    parameterIds?: Array<string>;
    /**
     * Filter the streams to include only those containing the specified event ids. This is a case sensitive 'ContainsAny' match. Optional, leave null to not filter by.
     */
    eventIds?: Array<string>;
    /**
     * Filter the streams to include only those with matching parent. Optional, leave null to not filter by.
     */
    parentStreamId?: string;
    /**
     * Filter the streams to include only those with matching status. Optional, leave null to not filter by.
     */
    includeStatuses?: Array<StreamStatus>;
    /**
     * Filter the streams to exclude those with matching status. Optional, leave null to not filter by.
     */
    excludeStatuses?: Array<StreamStatus>;
    /**
     * Filter the streams to include only those with matching topic. This is a case insensitive 'StartsWith' match. Optional, leave null to not filter by.
     */
    topic?: string;
    /**
     * Filter the streams to include only those with matching name. This is a case sensitive 'Contains' match if any capital letter is specified, else case insensitive. Optional, leave null to not filter by.
     */
    name?: string;
    /**
     * Full text search
     */
    search?: string;
    /**
     * The ordering to apply to the resource. Optional, if left null, no ordering is applied
     */
    ordering?: Array<Ordering>;
    paging?: Paging;
}